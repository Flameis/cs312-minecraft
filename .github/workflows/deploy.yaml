name: Deploy Minecraft Server

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose whether to deploy or destroy the infrastructure'
        type: choice
        options: [deploy, destroy, test]
        default: deploy

env:
  AWS_DEFAULT_REGION: us-west-2

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.action == 'deploy' && github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup tools
      run: |
        sudo apt-get update
        sudo apt-get install -y jq nmap openssh-client
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5"
        terraform_wrapper: false
    
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-west-2
    
    - name: Setup SSH key
      run: |
        echo "${{ secrets.SSH_KEY }}" > minecraft-key.pem
        chmod 600 minecraft-key.pem
        ssh-keygen -y -f minecraft-key.pem > minecraft-key.pub
        
        # Create or update the key pair in AWS
        aws ec2 delete-key-pair --key-name minecraft-server-key 2>/dev/null || true
        aws ec2 import-key-pair --key-name minecraft-server-key --public-key-material fileb://minecraft-key.pub
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
    
    - name: Deploy infrastructure
      run: |
        chmod +x scripts/*.sh
        ./scripts/create.sh
        ./scripts/test.sh
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}

  destroy:
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'destroy'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5"
    
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-west-2
    
    - name: Destroy everything
      run: |
        chmod +x scripts/*.sh
        ./scripts/destroy.sh
        
        # Clean up key pair
        aws ec2 delete-key-pair --key-name minecraft-server-key 2>/dev/null || true

  test:
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'test'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup tools
      run: |
        sudo apt-get update
        sudo apt-get install -y jq nmap openssh-client
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5"
        terraform_wrapper: false
    
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-west-2
    
    - name: Setup SSH key
      run: |
        echo "${{ secrets.SSH_KEY }}" > minecraft-key.pem
        chmod 600 minecraft-key.pem
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
    
    - name: Test infrastructure
      run: |
        chmod +x scripts/*.sh
        ./scripts/test.sh
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
